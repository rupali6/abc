Certainly! Below is a simple Java example using a `javax.xml.parsers` (JAXP) parser, specifically the `DocumentBuilder` class, to parse an XML document and navigate its structure using the Document Object Model (DOM):

```java
import org.w3c.dom.*;
import javax.xml.parsers.*;
import java.io.*;

public class JAXPParserExample {

    public static void main(String[] args) {
        try {
            // Create a DocumentBuilder
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();

            // Parse the XML document
            Document document = builder.parse(new File("your_xml_file.xml"));

            // Normalize the document to handle potential whitespace and formatting issues
            document.getDocumentElement().normalize();

            // Get the root element
            Element root = document.getDocumentElement();
            System.out.println("Root Element: " + root.getNodeName());

            // Example: Access a specific element by tag name
            NodeList nodeList = root.getElementsByTagName("example_element");
            if (nodeList.getLength() > 0) {
                Element exampleElement = (Element) nodeList.item(0);
                System.out.println("Example Element Text Content: " + exampleElement.getTextContent());
            }

            // You can continue to navigate and access elements and attributes as needed

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
```

In this example:

1. We create a `DocumentBuilder` instance using `DocumentBuilderFactory.newInstance().newDocumentBuilder()`.
2. We parse the XML document with `builder.parse(new File("your_xml_file.xml"))`. Make sure to replace `"your_xml_file.xml"` with the path to your XML file.
3. We normalize the document to handle potential whitespace and formatting issues with `document.getDocumentElement().normalize()`.
4. We access the root element using `document.getDocumentElement()`.
5. We demonstrate how to access a specific element by its tag name using `getElementsByTagName`.

You can modify this code to navigate and access elements and attributes as needed for your specific XML document structure.
